// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuizApi.Repositories.Context;

namespace QuizApi.Migrations
{
    [DbContext(typeof(QuizContext))]
    [Migration("20211211030821_mapping")]
    partial class mapping
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("QuizApi.Domain.Entities.Alternativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("PerguntaId")
                        .HasColumnType("integer");

                    b.Property<bool>("RespostaCerta")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.ToTable("alternativas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "++;",
                            PerguntaId = 1,
                            RespostaCerta = true
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "--;",
                            PerguntaId = 1,
                            RespostaCerta = false
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "= variavel + 1;",
                            PerguntaId = 1,
                            RespostaCerta = false
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "+",
                            PerguntaId = 1,
                            RespostaCerta = false
                        });
                });

            modelBuilder.Entity("QuizApi.Domain.Entities.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Enunciado")
                        .HasColumnType("text");

                    b.Property<int>("Tema")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("perguntas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Enunciado = "Na linguagem C#, para incrementar uma variável sem a utilização de uma equação, é necessário utilizar \"variavel______.\"",
                            Tema = 0
                        });
                });

            modelBuilder.Entity("QuizApi.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LinkImagem")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("QuizApi.Domain.Entities.Alternativa", b =>
                {
                    b.HasOne("QuizApi.Domain.Entities.Pergunta", "Pergunta")
                        .WithMany("Alternativas")
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("QuizApi.Domain.Entities.Pergunta", b =>
                {
                    b.Navigation("Alternativas");
                });
#pragma warning restore 612, 618
        }
    }
}
